<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="1" registryId="c8229252-83ec-4d3e-b4b7-81d6b6cb80e0" visibility="Internal">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="23" title="Salesforce Connect: SFConnection (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">QARSF_Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">Rootstock_Financials</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument argId="aa439d49-821b-449d-89d4-686b61e93f4f" id="reuseConnectionName">
          <value class="variable">
            <path element="reuseConnectionName"/>
          </value>
        </argument>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
      <parameterValueSources/>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="27" title="SOQL Query: select Id,Name,rstk__sycmp_homecurr__c from rstk__sycmp__c where Name = '{ExcelData.Company}'=&gt;sycmp">
      <tags/>
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select Id,Name,rstk__sycmp_homecurr__c from rstk__sycmp__c where Name = '</value>
              <variable>
                <path element="ExcelData"/>
                <path element="Company"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">sycmp</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="33" title="SOQL Query: SELECT Id,Name,rstk__povend_vendcurr__c FROM rstk__povend__c where Name = '{ExcelData.Vendor}'=&gt;povend">
      <tags/>
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">SELECT Id,Name,rstk__povend_vendcurr__c FROM rstk__povend__c where Name = '</value>
              <variable>
                <path element="ExcelData"/>
                <path element="Vendor"/>
              </variable>
              <value valueClass="string">'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">povend</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="32" title="SOQL Query: select Id,Name,rstkf__apinvtxn_apinvh__c,rstkf__apinvtxn_unapplamtmaint__c,rstkf__apinvtxn_amtapplmaint__c,rstkf__apinvtxn_homecurr__c,rstkf__apinvtxn_exchangerate__c,rstkf__apinvtxn_paycurr__c,rstkf__apinvtxn_maintcurr__c,rstkf__apinvtxn_trandate__c,rstkf__apinvtxn_homeamt__c,rstkf__apinvtxn_maintamt__c from rstkf__apinvtxn__c where Name like '{INVNO}%'=&gt;apinvtxn">
      <tags/>
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select Id,Name,rstkf__apinvtxn_apinvh__c,rstkf__apinvtxn_unapplamtmaint__c,rstkf__apinvtxn_amtapplmaint__c,rstkf__apinvtxn_homecurr__c,rstkf__apinvtxn_exchangerate__c,rstkf__apinvtxn_paycurr__c,rstkf__apinvtxn_maintcurr__c,rstkf__apinvtxn_trandate__c,rstkf__apinvtxn_homeamt__c,rstkf__apinvtxn_maintamt__c from rstkf__apinvtxn__c where Name like '</value>
              <variable>
                <path element="INVNO"/>
              </variable>
              <value valueClass="string">%'</value>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">apinvtxn</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="34" title="If: {sycmp.rstk__sycmp_homecurr__c != povend.rstk__povend_vendcurr__c}">
      <arguments>
        <argument id="condition">
          <value class="ne">
            <lhs class="variable">
              <path element="sycmp"/>
              <path element="rstk__sycmp_homecurr__c"/>
            </lhs>
            <rhs class="variable">
              <path element="povend"/>
              <path element="rstk__povend_vendcurr__c"/>
            </rhs>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="35">
          <steps>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="31" title="SOQL Query: select Id,Name,rstkf__syforexschedno_exchrate__c,rstkf__syforexschedno_exchrate_recip__c from rstkf__syforexschedno__c where rstkf__syforexschedno_frmdate__c &lt;= {apinvtxn.rstkf__apinvtxn_trandate__c} and rstkf__syforexschedno_thrudate__c &gt;= {apinvtxn.rstkf__apinvtxn_trandate__c} and rstkf__syforexschedno_funccurr__c = '{sycmp.rstk__sycmp_homecurr__c}' and rstkf__syforexschedno_foreigncurr__c ='{povend.rstk__povend_vendcurr__c}'=&gt;exchrate">
              <tags/>
              <arguments>
                <argument id="soqlQuery">
                  <value class="compound">
                    <parts>
                      <value valueClass="string">select Id,Name,rstkf__syforexschedno_exchrate__c,rstkf__syforexschedno_exchrate_recip__c from rstkf__syforexschedno__c where rstkf__syforexschedno_frmdate__c &lt;= </value>
                      <variable>
                        <path element="apinvtxn"/>
                        <path element="rstkf__apinvtxn_trandate__c"/>
                      </variable>
                      <value valueClass="string"> and rstkf__syforexschedno_thrudate__c &gt;= </value>
                      <variable>
                        <path element="apinvtxn"/>
                        <path element="rstkf__apinvtxn_trandate__c"/>
                      </variable>
                      <value valueClass="string"> and rstkf__syforexschedno_funccurr__c = '</value>
                      <variable>
                        <path element="sycmp"/>
                        <path element="rstk__sycmp_homecurr__c"/>
                      </variable>
                      <value valueClass="string">' and rstkf__syforexschedno_foreigncurr__c ='</value>
                      <variable>
                        <path element="povend"/>
                        <path element="rstk__povend_vendcurr__c"/>
                      </variable>
                      <value valueClass="string">'</value>
                    </parts>
                  </value>
                </argument>
                <argument id="apexConnectionName">
                  <value class="value" valueClass="string">SFConnection</value>
                </argument>
                <argument id="resultListName">
                  <value class="value" valueClass="string">exchrate</value>
                </argument>
                <argument id="resultScope">
                  <value class="value" valueClass="string">Test</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="39" title="Assert: {sycmp.rstk__sycmp_homecurr__c} EqualTo {apinvtxn.rstkf__apinvtxn_homecurr__c}">
              <tags/>
              <arguments>
                <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
                  <value class="variable">
                    <path element="sycmp"/>
                    <path element="rstk__sycmp_homecurr__c"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="apinvtxn"/>
                    <path element="rstkf__apinvtxn_homecurr__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="40" title="Assert: {povend.rstk__povend_vendcurr__c} EqualTo {apinvtxn.rstkf__apinvtxn_maintcurr__c}">
              <tags/>
              <arguments>
                <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
                  <value class="variable">
                    <path element="povend"/>
                    <path element="rstk__povend_vendcurr__c"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="apinvtxn"/>
                    <path element="rstkf__apinvtxn_maintcurr__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="41" title="Assert: {exchrate.rstkf__syforexschedno_exchrate__c} EqualTo {apinvtxn.rstkf__apinvtxn_exchangerate__c}">
              <tags/>
              <arguments>
                <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
                  <value class="variable">
                    <path element="exchrate"/>
                    <path element="rstkf__syforexschedno_exchrate__c"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="apinvtxn"/>
                    <path element="rstkf__apinvtxn_exchangerate__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="44" title="Assert: {ExpTxnTot} EqualTo {apinvtxn.rstkf__apinvtxn_maintamt__c}">
              <tags/>
              <arguments>
                <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
                  <value class="variable">
                    <path element="ExpTxnTot"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="apinvtxn"/>
                    <path element="rstkf__apinvtxn_maintamt__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="42" title="Assert: {ExpTxnTot * exchrate.rstkf__syforexschedno_exchrate__c} EqualTo {apinvtxn.rstkf__apinvtxn_homeamt__c}">
              <tags/>
              <arguments>
                <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
                  <value class="mult">
                    <lhs class="variable">
                      <path element="ExpTxnTot"/>
                    </lhs>
                    <rhs class="variable">
                      <path element="exchrate"/>
                      <path element="rstkf__syforexschedno_exchrate__c"/>
                    </rhs>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="apinvtxn"/>
                    <path element="rstkf__apinvtxn_homeamt__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="30" title="Assert: {ExpTxnTot} EqualTo {apinvtxn.rstkf__apinvtxn_amtapplmaint__c}">
      <tags/>
      <arguments>
        <argument argId="e2f0a37f-0347-41db-871c-c02b9ba55288" id="expectedValue">
          <value class="variable">
            <path element="ExpTxnTot"/>
          </value>
        </argument>
        <argument id="actualValue">
          <value class="variable">
            <path element="apinvtxn"/>
            <path element="rstkf__apinvtxn_amtapplmaint__c"/>
          </value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
  </steps>
  <params>
    <param linkedToUrl="provar:hasvalue:aa439d49-821b-449d-89d4-686b61e93f4f" name="reuseConnectionName" title="Override Connection">
      <summary>The name of an already opened connect to re-use.</summary>
      <type>
        <connectionType>
          <constraints>
            <valueConstraint name="variableName">true</valueConstraint>
            <valueConstraint name="requiredCapabilities">sfSoapConnect</valueConstraint>
          </constraints>
        </connectionType>
      </type>
    </param>
    <param name="INVNO" title="INVNO">
      <summary>The Apex code to be executed.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param linkedToUrl="provar:hasvalue:e2f0a37f-0347-41db-871c-c02b9ba55288" name="ExpTxnTot" title="ExpTxnTot">
      <summary>The value that is expected.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="mimeType">text/plain</valueConstraint>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="ExcelData" title="ExcelData">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
  </params>
  <args>
    <argument id="reuseConnectionName">
      <value class="variable">
        <path element="reuseConnectionName"/>
      </value>
    </argument>
    <argument id="ExpTxnTot">
      <value class="variable">
        <path element="InvSrcData"/>
      </value>
    </argument>
    <argument id="INVNO">
      <value class="variable">
        <path element="APINVH"/>
      </value>
    </argument>
    <argument id="ExcelData">
      <value class="variable">
        <path element="ipexcel"/>
      </value>
    </argument>
  </args>
</testCase>
