<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="8">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: QARSF_Admin (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">QARSF_Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">QARSF_Admin</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">Rootstock_Financials</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="6" title="For Each: {SourceData}=&gt;inv">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="SourceData"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">inv</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="SourceData" variableScope="Test">
          <cacheToken>C:/Users/dellDevonforce/Provar/ERPFinalProj/rsqasampleproj/templates/POLOADER.xlsx;1625736798666</cacheToken>
          <cachedParameters>
            <apiParam name="ItemNumber"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/POLOADER.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">Write</worksheetName>
            <valuesRange class="value"/>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
      <clauses>
        <clause name="substeps" testItemId="7">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="8" title="Set Values: ICITEM">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">ICITEM</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="inv"/>
                          <path element="ItemNumber"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="9" title="Set Values: INVquntity">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">INVquntity</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">30</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" isTitleUpdated="true" name="SetValues" testItemId="3" title="Set Values: inv.QTY">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">inv.Quantity</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="variable">
                          <path element="INVquntity"/>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
              <parameterValueSources/>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" name="Write" testItemId="2" title="Write: {inv}=&gt;templates/POLOADER.xlsx">
              <arguments>
                <argument id="data">
                  <value class="variable">
                    <path element="inv"/>
                  </value>
                </argument>
                <argument id="dataUrl">
                  <value class="excelTarget" sheetWriteMode="Update">
                    <workbookPath class="value" valueClass="string">templates/POLOADER.xlsx</workbookPath>
                    <worksheetName class="value" valueClass="string">Write</worksheetName>
                  </value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">templates/POLOADER.xlsx</value>
                </argument>
                <argument id="updateValueRange"/>
                <argument id="updateColumnNames">
                  <value class="value" valueClass="string">FirstRowOfRange</value>
                </argument>
                <argument id="updateMatchType">
                  <value class="value" valueClass="string">Where</value>
                </argument>
                <argument id="updateMatchLocator">
                  <value class="eq">
                    <lhs class="variable">
                      <path element="ItemNumber"/>
                    </lhs>
                    <rhs class="variable" topLevel="true">
                      <path element="ICTEM"/>
                    </rhs>
                  </value>
                </argument>
              </arguments>
              <generatedParameters>
                <apiParam group="result" name="updateValueRange" title="Values Range">
                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                  <type>
                    <textType>
                      <constraints>
                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                      </constraints>
                    </textType>
                  </type>
                </apiParam>
                <apiParam group="result" name="updateColumnNames" title="Column Names">
                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                  <defaultValue>FirstRowOfRange</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" internal="true" name="updateMatchType" title="">
                  <summary/>
                  <defaultValue>RowOrColNumber</defaultValue>
                  <type>
                    <choiceType>
                      <constraints>
                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                      </constraints>
                    </choiceType>
                  </type>
                </apiParam>
                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                </apiParam>
              </generatedParameters>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
