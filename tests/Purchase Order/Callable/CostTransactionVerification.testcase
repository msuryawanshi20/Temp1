<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="17" registryId="284adeee-afaa-4faf-8bc4-5ed43dda5dc0" visibility="Internal">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: SFConnection (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">QARSF_Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">Rootstock_Financials</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument argId="fddff0bd-dd83-46c2-a92e-3c763f55aa30" id="reuseConnectionName">
          <value class="variable">
            <path element="reuseConnectionName"/>
          </value>
        </argument>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Reuse</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="2" title="SOQL Query: select Id,Name,rstk__sytxncst_acctgdate__c,rstk__sytxncst_per__c,rstk__sytxncst_fyr__c,rstk__sytxncst_item__c,rstk__sytxncst_cracct__c,rstk__sytxncst_dracct__c,rstk__sytxncst_qtyoh__c,rstk__sytxncst_txnid__c from rstk__sytxncst__c where CreatedById  = '0051K000008fCeb' and CreatedDate &gt;= {CreatedDate}=&gt;sytxn">
      <arguments>
        <argument id="soqlQuery">
          <value class="compound">
            <parts>
              <value valueClass="string">select Id,Name,rstk__sytxncst_acctgdate__c,rstk__sytxncst_per__c,rstk__sytxncst_fyr__c,rstk__sytxncst_item__c,rstk__sytxncst_cracct__c,rstk__sytxncst_dracct__c,rstk__sytxncst_qtyoh__c,rstk__sytxncst_txnid__c from rstk__sytxncst__c where CreatedById  = '0051K000008fCeb' and CreatedDate &gt;= </value>
              <variable>
                <path element="CreatedDate"/>
              </variable>
            </parts>
          </value>
        </argument>
        <argument id="apexConnectionName">
          <value class="value" valueClass="string">SFConnection</value>
        </argument>
        <argument id="resultListName">
          <value class="value" valueClass="string">sytxn</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="7" title="Set Values: Date">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">Date</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">2021-02-19 </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="73" title="Set Values: rownum">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">rownum</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="3" title="For Each: {sytxn}=&gt;costtran">
      <arguments>
        <argument id="list">
          <value class="variable">
            <path element="sytxn"/>
          </value>
        </argument>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName">
          <value class="value" valueClass="string">costtran</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <parameterValueSources>
        <parameterValueSource variableName="excel" variableScope="Test">
          <cacheToken>C:/Users/dellDevonforce/Provar/RootstockFinancials/PurchaseOrder/templates/RSTKF_AutomationData.xlsx;1613979284116</cacheToken>
          <cachedParameters>
            <apiParam name="DebitAccount"/>
            <apiParam name="CreditAccount"/>
            <apiParam name="TransactionID"/>
            <apiParam name="CompItem"/>
          </cachedParameters>
          <sourceValue class="excelTarget" namesLocation="FirstRowOfRange" whereComparison="EqualTo">
            <workbookPath class="value" valueClass="string">templates/AutomationData.xlsx</workbookPath>
            <worksheetName class="value" valueClass="string">CostTransaction</worksheetName>
            <valuesRange class="value"/>
          </sourceValue>
        </parameterValueSource>
      </parameterValueSources>
      <clauses>
        <clause name="substeps" testItemId="4">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="85" title="Assert: {DateFormat(DateAdd(TODAY), &quot;YYYY-MM-dd&quot;)} EqualTo {costtran.rstk__sytxncst_acctgdate__c}">
              <tags/>
              <arguments>
                <argument id="expectedValue">
                  <value class="funcCall" id="DateFormat">
                    <argument id="date">
                      <value class="funcCall" id="DateAdd">
                        <argument id="date">
                          <value class="variable">
                            <path element="TODAY"/>
                          </value>
                        </argument>
                      </value>
                    </argument>
                    <argument id="outputFormat">
                      <value class="value" valueClass="string">YYYY-MM-dd</value>
                    </argument>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="costtran"/>
                    <path element="rstk__sytxncst_acctgdate__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage">
                  <value class="value" valueClass="string">MisMatch</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="86" title="Assert: {DateFormat(DateAdd(TODAY), &quot;M&quot;)} EqualTo {costtran.rstk__sytxncst_per__c}">
              <arguments>
                <argument id="expectedValue">
                  <value class="funcCall" id="DateFormat">
                    <argument id="date">
                      <value class="funcCall" id="DateAdd">
                        <argument id="date">
                          <value class="variable">
                            <path element="TODAY"/>
                          </value>
                        </argument>
                      </value>
                    </argument>
                    <argument id="outputFormat">
                      <value class="value" valueClass="string">M</value>
                    </argument>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="costtran"/>
                    <path element="rstk__sytxncst_per__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage">
                  <value class="value" valueClass="string">Mismatch</value>
                </argument>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="87" title="Assert: {DateFormat(DateAdd(TODAY), &quot;YYYY&quot;)} EqualTo {costtran.rstk__sytxncst_fyr__c}">
              <arguments>
                <argument id="expectedValue">
                  <value class="funcCall" id="DateFormat">
                    <argument id="date">
                      <value class="funcCall" id="DateAdd">
                        <argument id="date">
                          <value class="variable">
                            <path element="TODAY"/>
                          </value>
                        </argument>
                      </value>
                    </argument>
                    <argument id="outputFormat">
                      <value class="value" valueClass="string">YYYY</value>
                    </argument>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="costtran"/>
                    <path element="rstk__sytxncst_fyr__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="76" title="If: {costtran.rstk__sytxncst_cracct__c != null}">
              <arguments>
                <argument id="condition">
                  <value class="ne">
                    <lhs class="variable">
                      <path element="costtran"/>
                      <path element="rstk__sytxncst_cracct__c"/>
                    </lhs>
                  </value>
                </argument>
              </arguments>
              <clauses>
                <clause name="then" testItemId="77">
                  <steps>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="56" title="SOQL Query: select Name,Id, rstk__syacc_glxrefacct__c from rstk__syacc__c where id = '{costtran.rstk__sytxncst_cracct__c}'=&gt;creditacc">
                      <arguments>
                        <argument id="soqlQuery">
                          <value class="compound">
                            <parts>
                              <value valueClass="string">select Name,Id, rstk__syacc_glxrefacct__c from rstk__syacc__c where id = '</value>
                              <variable>
                                <path element="costtran"/>
                                <path element="rstk__sytxncst_cracct__c"/>
                              </variable>
                              <value valueClass="string">'</value>
                            </parts>
                          </value>
                        </argument>
                        <argument id="apexConnectionName">
                          <value class="value" valueClass="string">SFConnection</value>
                        </argument>
                        <argument id="resultListName">
                          <value class="value" valueClass="string">creditacc</value>
                        </argument>
                        <argument id="resultScope">
                          <value class="value" valueClass="string">Test</value>
                        </argument>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="57" title="Assert: {excel[rownum].CreditAccount} EqualTo {creditacc.Name}">
                      <arguments>
                        <argument id="expectedValue">
                          <value class="variable">
                            <path element="excel">
                              <filter class="conditionFilter">
                                <condition class="variable">
                                  <path element="rownum"/>
                                </condition>
                              </filter>
                            </path>
                            <path element="CreditAccount"/>
                          </value>
                        </argument>
                        <argument id="actualValue">
                          <value class="variable">
                            <path element="creditacc"/>
                            <path element="Name"/>
                          </value>
                        </argument>
                        <argument id="comparisonType">
                          <value class="value" valueClass="string">EqualTo</value>
                        </argument>
                        <argument id="caseSensitive">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="numeric">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="retainDecimals">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="nullGreater">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchMultiLine">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchDotAll">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="failureMessage">
                          <value class="value" valueClass="string">Mismatch</value>
                        </argument>
                      </arguments>
                    </apiCall>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="83" title="If: {costtran.rstk__sytxncst_dracct__c != null}">
              <arguments>
                <argument id="condition">
                  <value class="ne">
                    <lhs class="variable">
                      <path element="costtran"/>
                      <path element="rstk__sytxncst_dracct__c"/>
                    </lhs>
                  </value>
                </argument>
              </arguments>
              <clauses>
                <clause name="then" testItemId="84">
                  <steps>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexSoqlQuery" name="ApexSoqlQuery" testItemId="88" title="SOQL Query: select Name,Id, rstk__syacc_glxrefacct__c from rstk__syacc__c where id = '{costtran.rstk__sytxncst_dracct__c}'=&gt;debitacc">
                      <arguments>
                        <argument id="soqlQuery">
                          <value class="compound">
                            <parts>
                              <value valueClass="string">select Name,Id, rstk__syacc_glxrefacct__c from rstk__syacc__c where id = '</value>
                              <variable>
                                <path element="costtran"/>
                                <path element="rstk__sytxncst_dracct__c"/>
                              </variable>
                              <value valueClass="string">'</value>
                            </parts>
                          </value>
                        </argument>
                        <argument id="apexConnectionName">
                          <value class="value" valueClass="string">SFConnection</value>
                        </argument>
                        <argument id="resultListName">
                          <value class="value" valueClass="string">debitacc</value>
                        </argument>
                        <argument id="resultScope">
                          <value class="value" valueClass="string">Test</value>
                        </argument>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="59" title="Assert: {excel[rownum].DebitAccount} EqualTo {debitacc.Name}">
                      <arguments>
                        <argument id="expectedValue">
                          <value class="variable">
                            <path element="excel">
                              <filter class="conditionFilter">
                                <condition class="variable">
                                  <path element="rownum"/>
                                </condition>
                              </filter>
                            </path>
                            <path element="DebitAccount"/>
                          </value>
                        </argument>
                        <argument id="actualValue">
                          <value class="variable">
                            <path element="debitacc"/>
                            <path element="Name"/>
                          </value>
                        </argument>
                        <argument id="comparisonType">
                          <value class="value" valueClass="string">EqualTo</value>
                        </argument>
                        <argument id="caseSensitive">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="numeric">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="retainDecimals">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="nullGreater">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchMultiLine">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchDotAll">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="failureMessage"/>
                      </arguments>
                    </apiCall>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="60" title="Assert: {excel[rownum].TransactionID} EqualTo {costtran.rstk__sytxncst_txnid__c}">
              <arguments>
                <argument id="expectedValue">
                  <value class="variable">
                    <path element="excel">
                      <filter class="conditionFilter">
                        <condition class="variable">
                          <path element="rownum"/>
                        </condition>
                      </filter>
                    </path>
                    <path element="TransactionID"/>
                  </value>
                </argument>
                <argument id="actualValue">
                  <value class="variable">
                    <path element="costtran"/>
                    <path element="rstk__sytxncst_txnid__c"/>
                  </value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="75" title="Set Values: rownum">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">rownum</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="add">
                          <lhs class="variable">
                            <path element="rownum"/>
                          </lhs>
                          <rhs class="value" valueClass="decimal">1</rhs>
                        </value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
  <params>
    <param linkedToUrl="provar:hasvalue:fddff0bd-dd83-46c2-a92e-3c763f55aa30" name="reuseConnectionName" title="Override Connection">
      <summary>The name of an already opened connect to re-use.</summary>
      <type>
        <connectionType>
          <constraints>
            <valueConstraint name="variableName">true</valueConstraint>
            <valueConstraint name="requiredCapabilities">sfSoapConnect</valueConstraint>
          </constraints>
        </connectionType>
      </type>
    </param>
    <param name="Item" title="Item">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="CreatedDate" title="CreatedDate">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
  </params>
  <args>
    <argument id="reuseConnectionName">
      <value class="variable">
        <path element="reuseConnectionName"/>
      </value>
    </argument>
    <argument id="Item">
      <value class="variable">
        <path element="ExcelData"/>
        <path element="Item"/>
      </value>
    </argument>
    <argument id="CreatedDate">
      <value class="variable">
        <path element="CreatedDate"/>
      </value>
    </argument>
  </args>
</testCase>
